language: generic
arch: amd64
os: linux
dist: bionic
notifications:
  email: false
services:
  - docker
cache:
  pip: true
  directories:
    - "$HOME/.cache/pip"
    - node_modules
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
before_install:
  - node -v
  - sudo apt-get install npm
  # credentials are saved under the repository in travis-ci web interface
  - npm -v
install:
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
  - docker-compose --version
  # install latest pip
  - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  - python3 get-pip.py
  - sudo rm get-pip.py
  - pip3 --version
  # newman for postman collection testing
  - sudo npm install -g newman
  # flake8 for code linting
  - pip3 install flake8
  # pushing later codecoverage to codecav
  - pip3 install codecov
before_script:
  # login to dockerhub for pushing own image
  - echo "$DOCKER_PASSWORD" | sudo docker login --username "$DOCKER_USERNAME" --password-stdin
  - sudo docker build -t yannicnevhi/fastapi -f docker/common/Dockerfile .
  - sudo docker push yannicnevhi/fastapi
  # start requried containers
  - sudo docker container run -d --name mongodb -v mongo_data:/data/db -p 27017:27017 mongo:2.4.14
  - sudo docker container run -d --name fastapi -p 8000:8000 yannicnevhi/fastapi
  # check if containers are running
  - sleep 60s
  - sudo docker ps
jobs:
  include:
    - stage: flake8
      script: flake8 --config=flake8.ini
    - stage: postman-test
      script:
        - sudo docker ps
        - sudo docker container logs fastapi
        - sudo docker container logs mongodb
        - newman run postman/local/CocktailMachine.postman_collection.json
      after_success:
        - codecov
